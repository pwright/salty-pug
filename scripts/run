#!/usr/bin/python3

import requests

from plano import *

ENV["STORE_SERVICE_STORE_ID"] = store_id = "1"

ENV["STORE_SERVICE_HOST"] = store_host = "localhost"
ENV["STORE_SERVICE_PORT"] = store_port = str(get_random_port())

ENV["STORE_SERVICE_HOST_ANY"] = store_host
ENV["STORE_SERVICE_PORT_ANY"] = store_port

ENV["STORE_SERVICE_HOST_ALL"] = store_host
ENV["STORE_SERVICE_PORT_ALL"] = store_port

ENV["FACTORY_SERVICE_FACTORY_ID"] = factory_id = "1"

ENV["FACTORY_SERVICE_HOST"] = factory_host = "localhost"
ENV["FACTORY_SERVICE_PORT"] = factory_port = str(get_random_port())

ENV["FACTORY_SERVICE_HOST_ANY"] = factory_host
ENV["FACTORY_SERVICE_PORT_ANY"] = factory_port

ENV["FACTORY_SERVICE_HOST_ALL"] = factory_host
ENV["FACTORY_SERVICE_PORT_ALL"] = factory_port

ENV["CONSOLE_SERVICE_HOST"] = console_host = "localhost"
ENV["CONSOLE_SERVICE_PORT"] = console_port = str(8080)

store_base_url = f"http://{store_host}:{store_port}"
factory_base_url = f"http://{factory_host}:{factory_port}"

def check_error(response):
    if response["error"] is not None:
        raise Exception(response["error"])

def make_and_ship_item(kind, size, color):
    request = {"item": {"kind": kind, "size": size, "color": color}}
    response = requests.post(f"{factory_base_url}/api/make-item", json=request).json()
    check_error(response)

    item_id = response["item_id"]

    print(requests.get(f"{factory_base_url}/api/check-item-status?id={item_id}").text)

    request = {"item_id": item_id, "store_id": store_id}
    response = requests.post(f"{factory_base_url}/api/ship-item", json=request).json()
    check_error(response)

    return item_id

try:
    with start_process("python3 store/app.py") as store:
        with start_process("python3 factory/app.py") as factory:
            with start_process("python3 console/app.py") as console:
                while True:
                    sleep(1)
except KeyboardInterrupt:
    pass
